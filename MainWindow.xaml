<Window x:Class="DrDax.RadioClient.MainWindow" x:ClassModifier="internal"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	xmlns:l="clr-namespace:DrDax.RadioClient"
	Title="Radio" Width="451" Height="222" ResizeMode="CanResize" WindowStyle="None" Foreground="{Binding Brand.TextForeground}"
	d:DataContext="{d:DesignInstance l:EmptyChannel, IsDesignTimeCreatable=True}">
	<Window.Resources>
		<BitmapImage x:Key="MutedIcon" UriSource="Unmute.png"/>
		<BitmapImage x:Key="UnmutedIcon" UriSource="Mute.png"/>
		<SolidColorBrush x:Key="WarningBrush" Color="#FF2300" po:Freeze="True"/>
		<SolidColorBrush x:Key="ButtonBackground" Color="#80F0F0F0" po:Freeze="True"/>
		<Thickness x:Key="ThumbnailWithGuide">0,28,240,28</Thickness>
		<Thickness x:Key="ThumbnailWithoutGuide">0,28,0,28</Thickness>
		<Style x:Key="CaptionTooltip" TargetType="ToolTip">
			<Setter Property="Placement" Value="Relative"/>
			<Setter Property="Height" Value="20"/>
			<Setter Property="HorizontalOffset" Value="-3"/>
			<Setter Property="VerticalOffset" Value="-1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToolTip">
						<Border Background="{x:Static SystemColors.InfoBrush}" BorderThickness="1" BorderBrush="{x:Static SystemColors.WindowFrameBrush}">
							<TextBlock Text="{TemplateBinding Content}" Foreground="{x:Static SystemColors.InfoTextBrush}" Margin="2,0"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DescriptionTooltip" TargetType="ToolTip">
			<Setter Property="Placement" Value="Relative"/>
			<Setter Property="Width" Value="240"/>
			<Setter Property="HorizontalOffset" Value="-3"/>
			<Setter Property="VerticalOffset" Value="-1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ToolTip">
						<Border Background="{x:Static SystemColors.InfoBrush}" BorderThickness="1" BorderBrush="{x:Static SystemColors.WindowFrameBrush}">
							<TextBlock Text="{TemplateBinding Content}" Foreground="{x:Static SystemColors.InfoTextBrush}" Margin="2,0" TextWrapping="Wrap"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Window.TaskbarItemInfo>
		<!-- Sīktēlā rādīs tikai stacijas logotipu. -->
		<TaskbarItemInfo ThumbnailClipMargin="{StaticResource ThumbnailWithGuide}">
			<TaskbarItemInfo.ThumbButtonInfos>
				<!-- Skaņas atslēgšanas poga zem programmas sīktēla uzdevumu joslā. -->
				<ThumbButtonInfo x:Name="muteTaskBtn" Command="MuteVolume" x:FieldModifier="private"/>
			</TaskbarItemInfo.ThumbButtonInfos>
		</TaskbarItemInfo>
	</Window.TaskbarItemInfo>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="20"/><!-- Virsraksts -->
			<RowDefinition Height="*"/>
			<RowDefinition Height="20"/><!-- Vadība -->
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="206"/><!-- Logo -->
			<ColumnDefinition/>
		</Grid.ColumnDefinitions>
		<Border x:Name="header" Grid.ColumnSpan="2" Background="{Binding Brand.CaptionBackground}" x:FieldModifier="private">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="20"/>
					<ColumnDefinition Width="20"/>
				</Grid.ColumnDefinitions>
				<TextBlock Text="{Binding Caption, NotifyOnTargetUpdated=True}" Margin="7,2,2,2" Foreground="{Binding Brand.CaptionForeground}" MouseLeftButtonDown="DragStart" l:Attached.TrimAndShowToolTip="{StaticResource CaptionTooltip}"/>
				<TextBlock x:Name="clock" Grid.Row="2" Grid.Column="1" Text="20:54" Foreground="{Binding Brand.CaptionForeground}" Margin="2" ToolTip="Laiks studijā"/>
				<Button Grid.Column="2" Click="MinimizeWindow" Foreground="{Binding Brand.CaptionForeground}" IsTabStop="False" ToolTip="Minimizēt" Focusable="False">
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Name="Border" Background="Transparent">
											<Rectangle Name="Sign" Fill="{TemplateBinding Foreground}" Width="12" Height="3" Margin="2" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Fill" Value="#02A7D6" TargetName="Sign"/>
												<Setter Property="Background" Value="{StaticResource ButtonBackground}" TargetName="Border"/>
											</Trigger>
											<Trigger Property="IsPressed" Value="True">
												<Setter Property="RenderTransform" TargetName="Border">
													<Setter.Value>
														<TranslateTransform Y="1"/>
													</Setter.Value>
												</Setter>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Style>
				</Button>
				<Button Grid.Column="3" Click="CloseWindow" Foreground="{Binding Brand.CaptionForeground}" IsTabStop="False" ToolTip="Aizvērt" Focusable="False">
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="Button">
										<Border Name="Border" Background="Transparent">
											<Path Name="Sign" Data="M0,0 L11,11 M11,0 L0,11" StrokeThickness="3" Stroke="{TemplateBinding Foreground}" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Stroke" Value="{StaticResource WarningBrush}" TargetName="Sign"/>
												<Setter Property="Background" Value="{StaticResource ButtonBackground}" TargetName="Border"/>
											</Trigger>
											<Trigger Property="IsPressed" Value="True">
												<Setter Property="RenderTransform" TargetName="Border">
													<Setter.Value>
														<TranslateTransform Y="1"/>
													</Setter.Value>
												</Setter>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Button.Style>
				</Button>
			</Grid>
		</Border>

		<Rectangle x:Name="logoBackground" Grid.Row="1" Grid.RowSpan="2" MouseLeftButtonDown="DragStart" Fill="{Binding Brand.LogoBackground}" x:FieldModifier="private"/>
		<Image Grid.Row="1" x:Name="channelLogo" Stretch="None" Source="{Binding Logo}" x:FieldModifier="private" IsHitTestVisible="False"/>

		<!-- Raidījumu saraksts -->
		<Grid x:Name="guidePanel" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Background="{Binding Brand.GuideBackground}" MouseLeftButtonDown="DragStart" x:FieldModifier="private">
			<Grid.RowDefinitions>
				<RowDefinition Height="20"/>
				<RowDefinition Height="22"/>
				<RowDefinition Height="78"/>
				<RowDefinition Height="22"/>
				<RowDefinition Height="54"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="32"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Rectangle x:Name="progressBarBack" Grid.Row="2" Grid.ColumnSpan="2" Fill="{Binding Brand.StatusForeground}" Height="2" VerticalAlignment="Top" Opacity="0.3" x:FieldModifier="private"/>
			<Rectangle x:Name="progressBar" Grid.Row="2" Grid.ColumnSpan="2" Fill="{Binding Brand.StatusForeground}" Height="2" VerticalAlignment="Top" HorizontalAlignment="Left" x:FieldModifier="private"/>

			<TextBlock Text="{Binding Guide.PreviousBroadcast.StartTime, StringFormat=H:mm}" TextAlignment="Right"/>
			<TextBlock Grid.Column="1" Text="{Binding Guide.PreviousBroadcast.Caption, NotifyOnTargetUpdated=True}" Margin="4,0,4,2" l:Attached.TrimAndShowToolTip="{StaticResource CaptionTooltip}"/>
			<TextBlock Grid.Row="1" Text="{Binding Guide.CurrentBroadcast.StartTime, StringFormat=H:mm}" TextAlignment="Right" FontWeight="Bold" Margin="0,2,0,0"/>
			<TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Guide.CurrentBroadcast.Caption, NotifyOnTargetUpdated=True}" Margin="4,2" l:Attached.TrimAndShowToolTip="{StaticResource CaptionTooltip}"/>
			<TextBlock x:Name="currentDescription" Grid.Row="2" Grid.ColumnSpan="2" Text="{Binding Guide.CurrentBroadcast.Description, NotifyOnTargetUpdated=True}" TextWrapping="Wrap" Margin="2,0,2,2" LineHeight="18" l:Attached.TrimAndShowToolTip="{StaticResource DescriptionTooltip}" x:FieldModifier="private"/>
			<TextBlock Grid.Row="3" Text="{Binding Guide.NextBroadcast.StartTime, StringFormat=H:mm}" TextAlignment="Right" Margin="0,2,0,0"/>
			<TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Guide.NextBroadcast.Caption, NotifyOnTargetUpdated=True}" Margin="4,2" l:Attached.TrimAndShowToolTip="{StaticResource CaptionTooltip}"/>
			<TextBlock Grid.Row="4" Grid.ColumnSpan="2" Text="{Binding Guide.NextBroadcast.Description, NotifyOnTargetUpdated=True}" TextWrapping="Wrap" Margin="2,0" LineHeight="18" l:Attached.TrimAndShowToolTip="{StaticResource DescriptionTooltip}"/>
		</Grid>

		<!-- Stāvoklis -->
		<StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="2" ToolTip="{Binding PlaybackState}">
			<StackPanel.Resources>
				<l:PlaybackStateToOpacityConverter x:Key="StateToOpacity"/>
			</StackPanel.Resources>
			<Rectangle Width="3" Height="3" Fill="{Binding Brand.StatusForeground}" VerticalAlignment="Bottom" Opacity="{Binding PlaybackState, Converter={StaticResource StateToOpacity}, ConverterParameter=1}"/>
			<Rectangle Width="3" Height="6" Fill="{Binding Brand.StatusForeground}" VerticalAlignment="Bottom" Opacity="{Binding PlaybackState, Converter={StaticResource StateToOpacity}, ConverterParameter=2}" Margin="2,0"/>
			<Rectangle Width="3" Height="9" Fill="{Binding Brand.StatusForeground}" VerticalAlignment="Bottom" Opacity="{Binding PlaybackState, Converter={StaticResource StateToOpacity}, ConverterParameter=3}"/>
		</StackPanel>
		<StackPanel Grid.Row="2" HorizontalAlignment="Right" Orientation="Horizontal">
			<ToggleButton x:Name="muteBtn" IsChecked="{Binding IsMuted, Mode=OneWay}" Command="MediaCommands.MuteVolume" Margin="0,0,2,0" Width="20" FocusVisualStyle="{x:Null}" x:FieldModifier="private"><!-- lai komanda darbotos, Binding.Mode ir jābūt OneWay -->
				<ToggleButton.Template>
					<ControlTemplate TargetType="ToggleButton">
						<Border Name="Border" Background="Transparent">
							<Canvas Width="16" Height="14" Margin="2">
								<Path Fill="{Binding Brand.StatusForeground}" Data="M0,5 L2,5 L6,0 L6,13 L2,8 L0,8 Z"/>
								<!-- Unmuted -->
								<Path Name="Wave1" StrokeThickness="1" Stroke="{Binding Brand.StatusForeground}" Data="M7,4 C9,6 9,7 7,9"/>
								<Path Name="Wave2" StrokeThickness="1" Stroke="{Binding Brand.StatusForeground}" Data="M10,2.5 C12,5 12,8 10,10.5"/>
								<Path Name="Wave3" StrokeThickness="1" Stroke="{Binding Brand.StatusForeground}" Data="M12,0 C16,5 16,8 12,13"/>
								<!-- Muted -->
								<Ellipse Name="Sign" Canvas.Left="7" Canvas.Top="6" Width="7" Height="7" StrokeThickness="1" Stroke="{StaticResource WarningBrush}"/>
								<Line Name="Strike" X1="8" Y1="7" X2="13" Y2="12" StrokeThickness="1" Stroke="{StaticResource WarningBrush}"/>
							</Canvas>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Opacity" Value="0.5" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="True">
								<Setter Property="Opacity" Value="1" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="Visibility" Value="Collapsed" TargetName="Wave1"/>
								<Setter Property="Visibility" Value="Collapsed" TargetName="Wave2"/>
								<Setter Property="Visibility" Value="Collapsed" TargetName="Wave3"/>
								<Setter Property="Visibility" Value="Visible" TargetName="Sign"/>
								<Setter Property="Visibility" Value="Visible" TargetName="Strike"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="False">
								<Setter Property="Visibility" Value="Visible" TargetName="Wave1"/>
								<Setter Property="Visibility" Value="Visible" TargetName="Wave2"/>
								<Setter Property="Visibility" Value="Visible" TargetName="Wave3"/>
								<Setter Property="Visibility" Value="Collapsed" TargetName="Sign"/>
								<Setter Property="Visibility" Value="Collapsed" TargetName="Strike"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="True">
								<Setter Property="Background" Value="#40F0FFFF" TargetName="Border"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#40F0FFFF" TargetName="Border"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</ToggleButton.Template>
			</ToggleButton>
			<Slider x:Name="volumeSlider" Margin="2,0" Width="100" Height="16" Minimum="0" Maximum="1" Value="{Binding Volume}" SmallChange="0.01" LargeChange="0.1" IsEnabled="{Binding IsEnabled, ElementName=muteBtn}" Foreground="{Binding Brand.StatusForeground}" FocusVisualStyle="{x:Null}" x:FieldModifier="private">
				<Slider.ToolTip>
					<TextBlock Text="{Binding Volume, StringFormat=Skaļums \{0:P0\}}"/>
				</Slider.ToolTip>
				<Slider.Template>
					<ControlTemplate TargetType="{x:Type Slider}">
						<Grid>
							<Path Data="M0,1 L1,0 L1,1 Z" Stretch="Fill" Fill="{TemplateBinding Foreground}" Margin="3,0">
								<Path.OpacityMask>
									<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
										<GradientStop Color="#FF000000" Offset="0"/>
										<GradientStop Color="#FF000000" Offset="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Slider, AncestorLevel=1}, Path=Value, Mode=OneWay}"/>
										<GradientStop Color="#50000000" Offset="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Slider, AncestorLevel=1}, Path=Value, Mode=OneWay}"/>
										<GradientStop Color="#50000000" Offset="1"/>
									</LinearGradientBrush>
								</Path.OpacityMask>
							</Path>
							<Track Name="PART_Track">
								<Track.Resources>
									<Style TargetType="{x:Type RepeatButton}">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type RepeatButton}">
													<Rectangle Fill="Transparent"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Track.Resources>
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Focusable="False"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Focusable="False"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Name="Thumb" Foreground="{TemplateBinding Foreground}" Width="7" Visibility="Collapsed">
										<Thumb.Template>
											<ControlTemplate TargetType="{x:Type Thumb}">
												<Grid>
													<Rectangle Fill="{StaticResource ButtonBackground}"/>
													<Rectangle Fill="{TemplateBinding Foreground}" Width="1" SnapsToDevicePixels="True"/>
												</Grid>
											</ControlTemplate>
										</Thumb.Template>
									</Thumb>
								</Track.Thumb>
							</Track>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True">
								<Setter TargetName="Thumb" Property="Visibility" Value="Visible"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Thumb" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Slider.Template>
			</Slider>
		</StackPanel>
	</Grid>
</Window>